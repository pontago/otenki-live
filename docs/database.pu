@startuml database
package Entity <<Rectangle>> {
  package JMA <<Rectangle>> {
    entity JmaForecast {
      * 発表日時: DateTime
      * 予報日: Date
      * エリアコード: String
      * 天気コード: Number
      風: String
      波: String
      * 降水確率: List <<PopData>>
      最低気温: Number
      最高気温: Number
    }

    entity PopData {
      * 日時: DateTime
      * 降水量: Number
    }

    entity ForecastArea {
      * エリアID: String
      * エリアコード: String
      * エリア名: String
      * エリアスポットID: String
      * 週ID: String
      * 地域コード: String
      * 地域名: String
      * アメダスコード: String
    }

    entity ForecastTelop {
      * 天気コード: Number
      * 天気名: String
    }

    entity JmaHourlyForecast {
      * 発表日時: DateTime
      * 日時: DateTime
      * エリアID: String
      * 天気コード: Number
      * 気温: Number
      最低気温: Number
      最高気温: Number
    }

    JmaForecast ||--|{ PopData
  }

  package YouTube <<Rectangle>> {
    entity LiveChannel {
      * チャンネルID: String
      * 有効状態: Boolean
      * エリアコード: String
      * チャンネル名: String
      * ステータス: LiveChannelStatus
      * 最終処理日時: DateTime
      * 更新日時: DateTime
    }

    enum LiveChannelStatus {
      NONE
      PROCESSING
      FAILED
    }

    entity LiveDetectData <<DetectObject>> {
      * チャンネルID: String
      * 登録日時: DateTime
    }

    entity DetectObject {
      * 歩行者人数: Number
      * 傘利用人数: Number
      * 半袖人数: Number
      * ジャケット人数: Number
      * 長袖人数: Number
      * アウター人数: Number
    }

    LiveChannel ||--|| LiveChannelStatus
    LiveDetectData ..|> DetectObject
  }

}

package DynamoDB <<Rectangle>> {
  ' JMA
  entity WeatherForecast {
    * PK: String <<Partition key>> [エリアコード]
    * SK: String <<Sort key>> [予報日#発表日時]
    --
    * data: Map <<ForecastData>> [データ]
    * createdAt: DateTime [登録日時]
    * expiresAt: DateTime [有効期限]
  }

  entity ForecastData <<Map>> {
    * weatherCode: Number [天気コード]
    wind: String [風]
    wave: String [波]
    * pops: List <<ForecastDataPop>> [降水確率]
    tempMin: Number [最低気温]
    tempMax: Number [最高気温]
  }

  entity ForecastDataPop <<Map>> {
    * dateTime: DateTime [日時]
    * pop: Number [降水確率]
  }

  entity WeatherHourlyForecast {
    * PK: String <<Partition key>> [エリアコード]
    * SK: String <<Sort key>> [予報日#発表日時]
    --
    * reportDateTime: DateTime [発表日時]
    * weatherCode: Number [天気コード]
    * temp: Number [気温]
    tempMin: Number [最低気温]
    tempMax: Number [最高気温]
    * createdAt: DateTime [登録日時]
    * expiresAt: DateTime [有効期限]
  }

  entity ReportDateIndex <<GSI>> {
    * PK: String <<Partition key>> [エリアコード]
    * reportDateTime: String <<Sort key>> [発表日時]
  }

  WeatherForecast ||--|| ForecastData
  ForecastData ||--|{ ForecastDataPop
  WeatherHourlyForecast ||--|| ReportDateIndex

  ' YouTube
  entity LiveChannel {
    * PK: String <<Partition key>> [チャンネルID]
    * SK: Number <<Sort key>> [有効状態]
    --
    * areaCode: String [エリアコード]
    * name: String [チャンネル名]
    * status: Number [ステータス]
    * processedAt: DateTime [最終更新日時]
    * updatedAt: DateTime [更新日時]
  }

  entity ActiveIndex <<GSI>> {
    * PK: Number <<Partition key>> [有効状態]
  }

  entity AreaIndex <<GSI>> {
    * PK: String <<Partition key>> [エリアコード]
    * SK: Number <<Sort key>> [有効状態]
  }

  entity StatusIndex <<GSI>> {
    * PK: Number <<Partition key>> [ステータス]
  }

  entity LiveDetectData {
    * PK: String <<Partition key>> [チャンネルID]
    * SK: DateTime <<Sort key>> [登録日時]
    --
    * person: Number [歩行者人数]
    * umbrella: Number [傘利用人数]
    * tshirt: Number [半袖人数]
    * jacket: Number [ジャケット人数]
    * longSleeve: Number [長袖人数]
    * outer: Number [アウター人数]
  }

  LiveChannel ||--|| ActiveIndex
  LiveChannel ||--|| AreaIndex
  LiveChannel ||--|| StatusIndex

  Entity.JMA.JmaForecast ... WeatherForecast
  Entity.JMA.JmaHourlyForecast ... WeatherHourlyForecast
  Entity.YouTube.LiveChannel ... LiveChannel
  Entity.YouTube.LiveDetectData ... LiveDetectData

  hide <<Map>> circle
  hide <<GSI>> circle
}
@enduml
